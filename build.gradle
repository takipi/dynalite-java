
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eu.appsatori.fatjar'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

repositories {
    jcenter()
}

dependencies {
	compile(
		'commons-cli:commons-cli:1.4',
		"io.apigee.trireme:trireme-node12src:0.9.0",
		"io.apigee.trireme:trireme-core:0.9.0",
		"io.apigee.trireme:trireme-kernel:0.9.0",
		"io.apigee.trireme:trireme-jar:0.9.0",
		
		"com.h2database:h2:1.4.196",
		"mysql:mysql-connector-java:6.0.6",
	)
}

fatJar {
  manifest {
    attributes 'Main-Class': 'com.takipi.oss.dynajava.DynaliteJavaMain'
    attributes 'Class-Path': '.'
  }
  
  exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

task putDynaZipInResources() << {
	if (rootProject.hasProperty("zipFile")) {
		def resourcesDir = sourceSets.main.resources.srcDirs[0]
		
		println "Copy $zipFile to $resourcesDir"
		
		ant.copy(file: zipFile, tofile:"$resourcesDir/dynalite.zip", overwrite:true)
	}
}

task copyJar(dependsOn: fatJar) << {
        if (rootProject.hasProperty("jarTargetFile")) {
                println "Copying $jar.archivePath to $jarTargetFile"

                ant.copy(file:jar.archivePath, tofile:jarTargetFile)
        }
}

processResources.dependsOn(putDynaZipInResources)
build.dependsOn(copyJar)

